CODE::- 

fn longest_common_prefix(strings: &[String]) -> String {
    if strings.is_empty() {
        return String::new();
    }

    let first_string = &strings[0];

    for (i, c) in first_string.chars().enumerate() {
        for s in &strings[1..] {
            if let Some(char_in_s) = s.chars().nth(i) {
                if char_in_s != c {
                    return first_string[..i].to_string(); 
                }
            } else {
                return first_string[..i].to_string(); 
            }
        }
    }

    first_string.to_string() 
}

fn main() {
   
    println!("Enter a set of strings separated by spaces:");
    let mut input_strings = String::new();
    std::io::stdin().read_line(&mut input_strings).expect("Failed");

    let strings: Vec<String> = input_strings
        .trim()
        .split_whitespace()
        .map(|s| s.to_string())
        .collect();

   
    let common_prefix = longest_common_prefix(&strings);

   
    if common_prefix.is_empty() {
        println!("No common prefix found.");
    } else {
        println!("The longest common prefix is: {}", common_prefix);
    }
}
